// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FirehoseMetadata firehose metadata
//
// swagger:model FirehoseMetadata
type FirehoseMetadata struct {

	// created by
	// Format: uuid
	CreatedBy strfmt.UUID `json:"created_by,omitempty"`

	// created by email
	// Format: email
	CreatedByEmail strfmt.Email `json:"created_by_email,omitempty"`

	// updated by
	// Format: uuid
	UpdatedBy strfmt.UUID `json:"updated_by,omitempty"`

	// updated by email
	// Format: email
	UpdatedByEmail strfmt.Email `json:"updated_by_email,omitempty"`
}

// Validate validates this firehose metadata
func (m *FirehoseMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedByEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedByEmail(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FirehoseMetadata) validateCreatedBy(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedBy) { // not required
		return nil
	}

	if err := validate.FormatOf("created_by", "body", "uuid", m.CreatedBy.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *FirehoseMetadata) validateCreatedByEmail(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedByEmail) { // not required
		return nil
	}

	if err := validate.FormatOf("created_by_email", "body", "email", m.CreatedByEmail.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *FirehoseMetadata) validateUpdatedBy(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdatedBy) { // not required
		return nil
	}

	if err := validate.FormatOf("updated_by", "body", "uuid", m.UpdatedBy.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *FirehoseMetadata) validateUpdatedByEmail(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdatedByEmail) { // not required
		return nil
	}

	if err := validate.FormatOf("updated_by_email", "body", "email", m.UpdatedByEmail.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this firehose metadata based on context it is used
func (m *FirehoseMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FirehoseMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FirehoseMetadata) UnmarshalBinary(b []byte) error {
	var res FirehoseMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/odpf/dex/generated/models"
)

// GetFirehoseReader is a Reader for the GetFirehose structure.
type GetFirehoseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFirehoseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFirehoseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetFirehoseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFirehoseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFirehoseOK creates a GetFirehoseOK with default headers values
func NewGetFirehoseOK() *GetFirehoseOK {
	return &GetFirehoseOK{}
}

/*
GetFirehoseOK describes a response with status code 200, with default header values.

Found firehose with given URN
*/
type GetFirehoseOK struct {
	Payload *models.Firehose
}

// IsSuccess returns true when this get firehose o k response has a 2xx status code
func (o *GetFirehoseOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get firehose o k response has a 3xx status code
func (o *GetFirehoseOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get firehose o k response has a 4xx status code
func (o *GetFirehoseOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get firehose o k response has a 5xx status code
func (o *GetFirehoseOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get firehose o k response a status code equal to that given
func (o *GetFirehoseOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetFirehoseOK) Error() string {
	return fmt.Sprintf("[GET /projects/{projectSlug}/firehoses/{firehoseUrn}][%d] getFirehoseOK  %+v", 200, o.Payload)
}

func (o *GetFirehoseOK) String() string {
	return fmt.Sprintf("[GET /projects/{projectSlug}/firehoses/{firehoseUrn}][%d] getFirehoseOK  %+v", 200, o.Payload)
}

func (o *GetFirehoseOK) GetPayload() *models.Firehose {
	return o.Payload
}

func (o *GetFirehoseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Firehose)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFirehoseNotFound creates a GetFirehoseNotFound with default headers values
func NewGetFirehoseNotFound() *GetFirehoseNotFound {
	return &GetFirehoseNotFound{}
}

/*
GetFirehoseNotFound describes a response with status code 404, with default header values.

Firehose with given URN was not found
*/
type GetFirehoseNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get firehose not found response has a 2xx status code
func (o *GetFirehoseNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get firehose not found response has a 3xx status code
func (o *GetFirehoseNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get firehose not found response has a 4xx status code
func (o *GetFirehoseNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get firehose not found response has a 5xx status code
func (o *GetFirehoseNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get firehose not found response a status code equal to that given
func (o *GetFirehoseNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetFirehoseNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{projectSlug}/firehoses/{firehoseUrn}][%d] getFirehoseNotFound  %+v", 404, o.Payload)
}

func (o *GetFirehoseNotFound) String() string {
	return fmt.Sprintf("[GET /projects/{projectSlug}/firehoses/{firehoseUrn}][%d] getFirehoseNotFound  %+v", 404, o.Payload)
}

func (o *GetFirehoseNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFirehoseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFirehoseInternalServerError creates a GetFirehoseInternalServerError with default headers values
func NewGetFirehoseInternalServerError() *GetFirehoseInternalServerError {
	return &GetFirehoseInternalServerError{}
}

/*
GetFirehoseInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetFirehoseInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get firehose internal server error response has a 2xx status code
func (o *GetFirehoseInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get firehose internal server error response has a 3xx status code
func (o *GetFirehoseInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get firehose internal server error response has a 4xx status code
func (o *GetFirehoseInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get firehose internal server error response has a 5xx status code
func (o *GetFirehoseInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get firehose internal server error response a status code equal to that given
func (o *GetFirehoseInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetFirehoseInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projects/{projectSlug}/firehoses/{firehoseUrn}][%d] getFirehoseInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFirehoseInternalServerError) String() string {
	return fmt.Sprintf("[GET /projects/{projectSlug}/firehoses/{firehoseUrn}][%d] getFirehoseInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFirehoseInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFirehoseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

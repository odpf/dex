// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/odpf/dex/generated/models"
)

// UpgradeFirehoseReader is a Reader for the UpgradeFirehose structure.
type UpgradeFirehoseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpgradeFirehoseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpgradeFirehoseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpgradeFirehoseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpgradeFirehoseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpgradeFirehoseOK creates a UpgradeFirehoseOK with default headers values
func NewUpgradeFirehoseOK() *UpgradeFirehoseOK {
	return &UpgradeFirehoseOK{}
}

/*
UpgradeFirehoseOK describes a response with status code 200, with default header values.

Upgrade request accepted.
*/
type UpgradeFirehoseOK struct {
	Payload *models.Firehose
}

// IsSuccess returns true when this upgrade firehose o k response has a 2xx status code
func (o *UpgradeFirehoseOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this upgrade firehose o k response has a 3xx status code
func (o *UpgradeFirehoseOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upgrade firehose o k response has a 4xx status code
func (o *UpgradeFirehoseOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this upgrade firehose o k response has a 5xx status code
func (o *UpgradeFirehoseOK) IsServerError() bool {
	return false
}

// IsCode returns true when this upgrade firehose o k response a status code equal to that given
func (o *UpgradeFirehoseOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpgradeFirehoseOK) Error() string {
	return fmt.Sprintf("[POST /projects/{projectId}/firehoses/{firehoseUrn}/upgrade][%d] upgradeFirehoseOK  %+v", 200, o.Payload)
}

func (o *UpgradeFirehoseOK) String() string {
	return fmt.Sprintf("[POST /projects/{projectId}/firehoses/{firehoseUrn}/upgrade][%d] upgradeFirehoseOK  %+v", 200, o.Payload)
}

func (o *UpgradeFirehoseOK) GetPayload() *models.Firehose {
	return o.Payload
}

func (o *UpgradeFirehoseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Firehose)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpgradeFirehoseNotFound creates a UpgradeFirehoseNotFound with default headers values
func NewUpgradeFirehoseNotFound() *UpgradeFirehoseNotFound {
	return &UpgradeFirehoseNotFound{}
}

/*
UpgradeFirehoseNotFound describes a response with status code 404, with default header values.

Firehose with given URN was not found
*/
type UpgradeFirehoseNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this upgrade firehose not found response has a 2xx status code
func (o *UpgradeFirehoseNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this upgrade firehose not found response has a 3xx status code
func (o *UpgradeFirehoseNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upgrade firehose not found response has a 4xx status code
func (o *UpgradeFirehoseNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this upgrade firehose not found response has a 5xx status code
func (o *UpgradeFirehoseNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this upgrade firehose not found response a status code equal to that given
func (o *UpgradeFirehoseNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpgradeFirehoseNotFound) Error() string {
	return fmt.Sprintf("[POST /projects/{projectId}/firehoses/{firehoseUrn}/upgrade][%d] upgradeFirehoseNotFound  %+v", 404, o.Payload)
}

func (o *UpgradeFirehoseNotFound) String() string {
	return fmt.Sprintf("[POST /projects/{projectId}/firehoses/{firehoseUrn}/upgrade][%d] upgradeFirehoseNotFound  %+v", 404, o.Payload)
}

func (o *UpgradeFirehoseNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpgradeFirehoseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpgradeFirehoseInternalServerError creates a UpgradeFirehoseInternalServerError with default headers values
func NewUpgradeFirehoseInternalServerError() *UpgradeFirehoseInternalServerError {
	return &UpgradeFirehoseInternalServerError{}
}

/*
UpgradeFirehoseInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type UpgradeFirehoseInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this upgrade firehose internal server error response has a 2xx status code
func (o *UpgradeFirehoseInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this upgrade firehose internal server error response has a 3xx status code
func (o *UpgradeFirehoseInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upgrade firehose internal server error response has a 4xx status code
func (o *UpgradeFirehoseInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this upgrade firehose internal server error response has a 5xx status code
func (o *UpgradeFirehoseInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this upgrade firehose internal server error response a status code equal to that given
func (o *UpgradeFirehoseInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpgradeFirehoseInternalServerError) Error() string {
	return fmt.Sprintf("[POST /projects/{projectId}/firehoses/{firehoseUrn}/upgrade][%d] upgradeFirehoseInternalServerError  %+v", 500, o.Payload)
}

func (o *UpgradeFirehoseInternalServerError) String() string {
	return fmt.Sprintf("[POST /projects/{projectId}/firehoses/{firehoseUrn}/upgrade][%d] upgradeFirehoseInternalServerError  %+v", 500, o.Payload)
}

func (o *UpgradeFirehoseInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpgradeFirehoseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

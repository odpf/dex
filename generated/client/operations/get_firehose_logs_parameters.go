// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetFirehoseLogsParams creates a new GetFirehoseLogsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetFirehoseLogsParams() *GetFirehoseLogsParams {
	return &GetFirehoseLogsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetFirehoseLogsParamsWithTimeout creates a new GetFirehoseLogsParams object
// with the ability to set a timeout on a request.
func NewGetFirehoseLogsParamsWithTimeout(timeout time.Duration) *GetFirehoseLogsParams {
	return &GetFirehoseLogsParams{
		timeout: timeout,
	}
}

// NewGetFirehoseLogsParamsWithContext creates a new GetFirehoseLogsParams object
// with the ability to set a context for a request.
func NewGetFirehoseLogsParamsWithContext(ctx context.Context) *GetFirehoseLogsParams {
	return &GetFirehoseLogsParams{
		Context: ctx,
	}
}

// NewGetFirehoseLogsParamsWithHTTPClient creates a new GetFirehoseLogsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetFirehoseLogsParamsWithHTTPClient(client *http.Client) *GetFirehoseLogsParams {
	return &GetFirehoseLogsParams{
		HTTPClient: client,
	}
}

/*
GetFirehoseLogsParams contains all the parameters to send to the API endpoint

	for the get firehose logs operation.

	Typically these are written to a http.Request.
*/
type GetFirehoseLogsParams struct {

	/* Container.

	   Return logs for selected container.
	*/
	Container *string

	/* FirehoseUrn.

	   URN of the firehose.
	*/
	FirehoseUrn string

	/* Follow.

	   Follow the log stream of the firehose.

	   Default: true
	*/
	Follow *bool

	/* Pod.

	   Return logs for selected pod.
	*/
	Pod *string

	/* Previous.

	   Return previous terminated container logs.
	*/
	Previous *bool

	/* ProjectSlug.

	   Unique identifier of the project.
	*/
	ProjectSlug string

	/* SinceSeconds.

	   Return logs since given seconds ago
	*/
	SinceSeconds *int64

	/* TailLines.

	   Number of lines from the end of the logs to show.
	*/
	TailLines *int64

	/* Timestamps.

	   Add a timestamp at the beginning of every line of log output.
	*/
	Timestamps *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get firehose logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetFirehoseLogsParams) WithDefaults() *GetFirehoseLogsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get firehose logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetFirehoseLogsParams) SetDefaults() {
	var (
		followDefault = bool(true)
	)

	val := GetFirehoseLogsParams{
		Follow: &followDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get firehose logs params
func (o *GetFirehoseLogsParams) WithTimeout(timeout time.Duration) *GetFirehoseLogsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get firehose logs params
func (o *GetFirehoseLogsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get firehose logs params
func (o *GetFirehoseLogsParams) WithContext(ctx context.Context) *GetFirehoseLogsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get firehose logs params
func (o *GetFirehoseLogsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get firehose logs params
func (o *GetFirehoseLogsParams) WithHTTPClient(client *http.Client) *GetFirehoseLogsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get firehose logs params
func (o *GetFirehoseLogsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContainer adds the container to the get firehose logs params
func (o *GetFirehoseLogsParams) WithContainer(container *string) *GetFirehoseLogsParams {
	o.SetContainer(container)
	return o
}

// SetContainer adds the container to the get firehose logs params
func (o *GetFirehoseLogsParams) SetContainer(container *string) {
	o.Container = container
}

// WithFirehoseUrn adds the firehoseUrn to the get firehose logs params
func (o *GetFirehoseLogsParams) WithFirehoseUrn(firehoseUrn string) *GetFirehoseLogsParams {
	o.SetFirehoseUrn(firehoseUrn)
	return o
}

// SetFirehoseUrn adds the firehoseUrn to the get firehose logs params
func (o *GetFirehoseLogsParams) SetFirehoseUrn(firehoseUrn string) {
	o.FirehoseUrn = firehoseUrn
}

// WithFollow adds the follow to the get firehose logs params
func (o *GetFirehoseLogsParams) WithFollow(follow *bool) *GetFirehoseLogsParams {
	o.SetFollow(follow)
	return o
}

// SetFollow adds the follow to the get firehose logs params
func (o *GetFirehoseLogsParams) SetFollow(follow *bool) {
	o.Follow = follow
}

// WithPod adds the pod to the get firehose logs params
func (o *GetFirehoseLogsParams) WithPod(pod *string) *GetFirehoseLogsParams {
	o.SetPod(pod)
	return o
}

// SetPod adds the pod to the get firehose logs params
func (o *GetFirehoseLogsParams) SetPod(pod *string) {
	o.Pod = pod
}

// WithPrevious adds the previous to the get firehose logs params
func (o *GetFirehoseLogsParams) WithPrevious(previous *bool) *GetFirehoseLogsParams {
	o.SetPrevious(previous)
	return o
}

// SetPrevious adds the previous to the get firehose logs params
func (o *GetFirehoseLogsParams) SetPrevious(previous *bool) {
	o.Previous = previous
}

// WithProjectSlug adds the projectSlug to the get firehose logs params
func (o *GetFirehoseLogsParams) WithProjectSlug(projectSlug string) *GetFirehoseLogsParams {
	o.SetProjectSlug(projectSlug)
	return o
}

// SetProjectSlug adds the projectSlug to the get firehose logs params
func (o *GetFirehoseLogsParams) SetProjectSlug(projectSlug string) {
	o.ProjectSlug = projectSlug
}

// WithSinceSeconds adds the sinceSeconds to the get firehose logs params
func (o *GetFirehoseLogsParams) WithSinceSeconds(sinceSeconds *int64) *GetFirehoseLogsParams {
	o.SetSinceSeconds(sinceSeconds)
	return o
}

// SetSinceSeconds adds the sinceSeconds to the get firehose logs params
func (o *GetFirehoseLogsParams) SetSinceSeconds(sinceSeconds *int64) {
	o.SinceSeconds = sinceSeconds
}

// WithTailLines adds the tailLines to the get firehose logs params
func (o *GetFirehoseLogsParams) WithTailLines(tailLines *int64) *GetFirehoseLogsParams {
	o.SetTailLines(tailLines)
	return o
}

// SetTailLines adds the tailLines to the get firehose logs params
func (o *GetFirehoseLogsParams) SetTailLines(tailLines *int64) {
	o.TailLines = tailLines
}

// WithTimestamps adds the timestamps to the get firehose logs params
func (o *GetFirehoseLogsParams) WithTimestamps(timestamps *bool) *GetFirehoseLogsParams {
	o.SetTimestamps(timestamps)
	return o
}

// SetTimestamps adds the timestamps to the get firehose logs params
func (o *GetFirehoseLogsParams) SetTimestamps(timestamps *bool) {
	o.Timestamps = timestamps
}

// WriteToRequest writes these params to a swagger request
func (o *GetFirehoseLogsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Container != nil {

		// query param container
		var qrContainer string

		if o.Container != nil {
			qrContainer = *o.Container
		}
		qContainer := qrContainer
		if qContainer != "" {

			if err := r.SetQueryParam("container", qContainer); err != nil {
				return err
			}
		}
	}

	// path param firehoseUrn
	if err := r.SetPathParam("firehoseUrn", o.FirehoseUrn); err != nil {
		return err
	}

	if o.Follow != nil {

		// query param follow
		var qrFollow bool

		if o.Follow != nil {
			qrFollow = *o.Follow
		}
		qFollow := swag.FormatBool(qrFollow)
		if qFollow != "" {

			if err := r.SetQueryParam("follow", qFollow); err != nil {
				return err
			}
		}
	}

	if o.Pod != nil {

		// query param pod
		var qrPod string

		if o.Pod != nil {
			qrPod = *o.Pod
		}
		qPod := qrPod
		if qPod != "" {

			if err := r.SetQueryParam("pod", qPod); err != nil {
				return err
			}
		}
	}

	if o.Previous != nil {

		// query param previous
		var qrPrevious bool

		if o.Previous != nil {
			qrPrevious = *o.Previous
		}
		qPrevious := swag.FormatBool(qrPrevious)
		if qPrevious != "" {

			if err := r.SetQueryParam("previous", qPrevious); err != nil {
				return err
			}
		}
	}

	// path param projectSlug
	if err := r.SetPathParam("projectSlug", o.ProjectSlug); err != nil {
		return err
	}

	if o.SinceSeconds != nil {

		// query param since_seconds
		var qrSinceSeconds int64

		if o.SinceSeconds != nil {
			qrSinceSeconds = *o.SinceSeconds
		}
		qSinceSeconds := swag.FormatInt64(qrSinceSeconds)
		if qSinceSeconds != "" {

			if err := r.SetQueryParam("since_seconds", qSinceSeconds); err != nil {
				return err
			}
		}
	}

	if o.TailLines != nil {

		// query param tail_lines
		var qrTailLines int64

		if o.TailLines != nil {
			qrTailLines = *o.TailLines
		}
		qTailLines := swag.FormatInt64(qrTailLines)
		if qTailLines != "" {

			if err := r.SetQueryParam("tail_lines", qTailLines); err != nil {
				return err
			}
		}
	}

	if o.Timestamps != nil {

		// query param timestamps
		var qrTimestamps bool

		if o.Timestamps != nil {
			qrTimestamps = *o.Timestamps
		}
		qTimestamps := swag.FormatBool(qrTimestamps)
		if qTimestamps != "" {

			if err := r.SetQueryParam("timestamps", qTimestamps); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

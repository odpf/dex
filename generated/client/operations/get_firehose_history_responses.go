// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/odpf/dex/generated/models"
)

// GetFirehoseHistoryReader is a Reader for the GetFirehoseHistory structure.
type GetFirehoseHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFirehoseHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFirehoseHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetFirehoseHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFirehoseHistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFirehoseHistoryOK creates a GetFirehoseHistoryOK with default headers values
func NewGetFirehoseHistoryOK() *GetFirehoseHistoryOK {
	return &GetFirehoseHistoryOK{}
}

/*
GetFirehoseHistoryOK describes a response with status code 200, with default header values.

History for given firehose URN.
*/
type GetFirehoseHistoryOK struct {
	Payload *models.History
}

// IsSuccess returns true when this get firehose history o k response has a 2xx status code
func (o *GetFirehoseHistoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get firehose history o k response has a 3xx status code
func (o *GetFirehoseHistoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get firehose history o k response has a 4xx status code
func (o *GetFirehoseHistoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get firehose history o k response has a 5xx status code
func (o *GetFirehoseHistoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get firehose history o k response a status code equal to that given
func (o *GetFirehoseHistoryOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetFirehoseHistoryOK) Error() string {
	return fmt.Sprintf("[GET /projects/{projectSlug}/firehoses/{firehoseUrn}/history][%d] getFirehoseHistoryOK  %+v", 200, o.Payload)
}

func (o *GetFirehoseHistoryOK) String() string {
	return fmt.Sprintf("[GET /projects/{projectSlug}/firehoses/{firehoseUrn}/history][%d] getFirehoseHistoryOK  %+v", 200, o.Payload)
}

func (o *GetFirehoseHistoryOK) GetPayload() *models.History {
	return o.Payload
}

func (o *GetFirehoseHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.History)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFirehoseHistoryNotFound creates a GetFirehoseHistoryNotFound with default headers values
func NewGetFirehoseHistoryNotFound() *GetFirehoseHistoryNotFound {
	return &GetFirehoseHistoryNotFound{}
}

/*
GetFirehoseHistoryNotFound describes a response with status code 404, with default header values.

Firehose with given URN was not found
*/
type GetFirehoseHistoryNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get firehose history not found response has a 2xx status code
func (o *GetFirehoseHistoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get firehose history not found response has a 3xx status code
func (o *GetFirehoseHistoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get firehose history not found response has a 4xx status code
func (o *GetFirehoseHistoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get firehose history not found response has a 5xx status code
func (o *GetFirehoseHistoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get firehose history not found response a status code equal to that given
func (o *GetFirehoseHistoryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetFirehoseHistoryNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{projectSlug}/firehoses/{firehoseUrn}/history][%d] getFirehoseHistoryNotFound  %+v", 404, o.Payload)
}

func (o *GetFirehoseHistoryNotFound) String() string {
	return fmt.Sprintf("[GET /projects/{projectSlug}/firehoses/{firehoseUrn}/history][%d] getFirehoseHistoryNotFound  %+v", 404, o.Payload)
}

func (o *GetFirehoseHistoryNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFirehoseHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFirehoseHistoryInternalServerError creates a GetFirehoseHistoryInternalServerError with default headers values
func NewGetFirehoseHistoryInternalServerError() *GetFirehoseHistoryInternalServerError {
	return &GetFirehoseHistoryInternalServerError{}
}

/*
GetFirehoseHistoryInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetFirehoseHistoryInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get firehose history internal server error response has a 2xx status code
func (o *GetFirehoseHistoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get firehose history internal server error response has a 3xx status code
func (o *GetFirehoseHistoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get firehose history internal server error response has a 4xx status code
func (o *GetFirehoseHistoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get firehose history internal server error response has a 5xx status code
func (o *GetFirehoseHistoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get firehose history internal server error response a status code equal to that given
func (o *GetFirehoseHistoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetFirehoseHistoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projects/{projectSlug}/firehoses/{firehoseUrn}/history][%d] getFirehoseHistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFirehoseHistoryInternalServerError) String() string {
	return fmt.Sprintf("[GET /projects/{projectSlug}/firehoses/{firehoseUrn}/history][%d] getFirehoseHistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFirehoseHistoryInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFirehoseHistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
